<script>
    let suggestions, suggestion_input;

    function suggest( url, query )
    {
        return fetch( url + '?query=' + encodeURIComponent( query )).then( response =>
        {
            return response.json();
        });
    }

    ( typeof Suggestor === 'undefined' ) && ( Suggestor =
    {
        onKeyUp: async function( input, event, wrapper )
        {
            console.log( 'suggestor', input.value );

            if( !suggestions )
            {
                let position = ( wrapper || input ).getBoundingClientRect();
                let input_position = input.getBoundingClientRect();
                let style = window.getComputedStyle( input );

                input.suggestor = 
                {
                    padding: (( input_position.x - position.x ) + parseInt( style['padding-left'])) + 'px'
                }

                suggestion_input = input;

                suggestions = document.createElement('div');
                suggestions.setAttribute('style','position:fixed;box-sizing:border-box;color:'+style.color+';font-family:'+style['font-family']+';font-size:'+style['font-size']+';font-weight:'+style['font-weight']+';top:'+(position.top+position.height)+'px;left:'+position.left+'px;width:'+position.width+'px;border:1px solid silver;border-top:none;');

                document.body.appendChild( suggestions );
            }

            let suggests = await suggest( input.getAttribute('data-suggest'), input.value );

            let suggestion_content = '';

            for( let suggestion of suggests )
            {
                suggestion_content += '<div style="cursor:pointer;overflow:hidden;height:30px;line-height:30px;border-top:1px solid silver;padding:0 ' + input.suggestor.padding + '" onclick="Suggestor.suggest(this)">' + suggestion + '</div>';
            }

            suggestions.innerHTML = suggestion_content;
        },

        onBlur: function( input )
        {
            setTimeout(() =>
            {
                suggestions && document.body.removeChild( suggestions );
                suggestions = undefined;
            },
            100 );
        },

        suggest: function( suggestion )
        {
            suggestion_input.value = suggestion.innerText;
        }
    })
</script>