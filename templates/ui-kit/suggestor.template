<style>
    .suggestor
    {

        .autocomplete-items
        {
            position: absolute;
            border-bottom: none;
            border-top: none;
            top: 100%;
            left: 16px;
            right: 0;
            width: calc(100% - var(--padding-5));
            box-sizing: border-box;
            @media screen and ( max-width: 768px )
            {
                position: fixed;
                width: 100%;
                height: calc(100% - 96rem);
                top: 48rem;
                left: 0;
                background: white;
                overflow-y: scroll;
                scrollbar-width: none;
                user-select: none;
                &:-webkit-scrollbar { display: none; }
            }
        }

        .autocomplete-items > div
        {
            padding: var(--padding-1);
            cursor: pointer;
            background-color: white;
            border-bottom: 1px solid var(--gray-1);
            font-size: 14rem;
            line-height: 20rem;
            display: flex;
            flex-direction: row;
            img
            {
                width: 48px; height: 48px; object-fit: cover;
            }
            > div
            {
                display: flex;
                flex-direction: column;
                color: var(--gray-9);
                padding-left: var(--padding-2);
                p
                {
                    margin: 0;
                    font-size: 15rem;
                    line-height: 16rem;
                    color: var(--main-color);
                    font-weight: 500;
                    margin-bottom: var(--padding-0);
                }
                span
                {
                    font-size: 14rem;
                    line-height: 16rem;
                }
            }
            &:last-child{ border-bottom-left-radius: 24px; border-bottom-right-radius: 24px; }
        }

        .autocomplete-items > div:hover
        {
            background-color: #e9e9e9;
        }

        .autocomplete-active
        {
            background-color: DodgerBlue !important;
            color: #ffffff;
        }
        .autocomplete
        {
            width:300px;
            @media screen and ( max-width: 768px ){ width: 100%; }
        }
    }
</style>
<form class="suggestor search" autocomplete="off" onsubmit="return false;" action="" role="search" itemprop="potentialAction" itemscope itemtype="https://schema.org/SearchAction">
    <meta itemprop="target" content="https://example.com/?q={q}" />
    <button name="search-close" class="mobile" aria-label="search-close" onclick="this.parentNode.classList.remove('active');this.nextSibling.firstChild.blur();" data-icon="left-arrow"></button>
    <div class="autocomplete">
        <input itemprop="query-input" aria-label="search" id="_Search" type="text" name="search" placeholder="Hladat..." />
    </div>
    <button name="search" aria-label="search button" data-icon="search"></button>
</form>
<script instance>
    function autocomplete(inp, arr)
    {
		var currentFocus = 0;
		inp.addEventListener("keypress", async function(e)
        {
			if (e.keyCode == 13){ e.preventDefault(); return false; }

			Timers.setTimeout( 'suggestor', async ( ) =>
			{
				if( inp.value.trim().length  )
	            {
	                let body = await DOM_awaitRequest( 'POST', '/api/model/', 'products( id LIKE "'+ encodeURIComponent( inp.value ) +'%"; limit: 6 ){ id, groupID, images{ url } }' );
	                arr = body;
					//closeAllLists();
					var b, val = this.value;
					var a = document.createElement("DIV");
			            a.setAttribute("id", this.id + "autocomplete-list");
			            a.setAttribute("class", "autocomplete-items");
			            this.parentNode.appendChild(a);
                        for (i = 0; i < arr.length; i++)
                        {
                            console.log(arr[i].images[0].url)
                            b = document.createElement("div");
                            /*
                            b.innerHTML = "<strong>" + arr[i].groupID.substr(0, val.length) + "</strong>";
                            b.innerHTML += arr[i].groupID.substr(val.length);

                             */
                            b.innerHTML = '<img src="'+arr[i].images[0].url+'"/>';
                            b.innerHTML += '<div><p>Product Name</p><span>â‚¬ 150</span></div>';
                            b.innerHTML += "<input type='hidden' data-id='"+arr[i].id+"' value='" + arr[i].groupID + "'>";
                            b.addEventListener("click", function(e)
                            {
                                inp.value = this.getElementsByTagName("input")[0].value;
                                inp.dataset.id = this.getElementsByTagName("input")[0].dataset.id;
                                if( parseInt(inp.dataset.id) !== 0 )
                                {
                                    closeAllLists();
                                }
                                else
                                {
                                    inp.focus();
                                }
                            });
                            a.appendChild(b);
                        }
	            }
			}, 500 )

        });

		function addActive(x)
        {
            if (!x) return false;
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x)
        {
            for (var i = 0; i < x.length; i++)
            {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt)
        {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++)
            {
                if (elmnt != x[i] && elmnt != inp)
                {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
        document.addEventListener("click", function (e) { closeAllLists(e.target); });
        inp.addEventListener("keydown", function(e)
        {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40)
            {
                currentFocus++;
                addActive(x);
            } else if (e.keyCode == 38)
            {
                currentFocus--;
                addActive(x);
            }
            else if (e.keyCode == 13)
            {
                e.preventDefault();
                if (currentFocus > -1)
                {
                    if (x) x[currentFocus].click();
                }
            }
        });


    }

    autocomplete(document.getElementById("_Search"), []);
</script>
