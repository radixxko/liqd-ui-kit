<style>
    .List
    {
        position: relative;
        float: left;

        .ListItem
        {
            position: relative;
            border-bottom: 1px solid var(--gray-2);
            padding: 16rem 0;
            cursor: pointer;
            &:hover:before
             {
                 content: '';
                 position: absolute;
                 top: 8px;
                 bottom: 8px;
                 left: calc(-16rem - 2px);
                 width: 2px;
                 background: var(--orange-1);
             }
            &.active:before
             {
                 content: '';
                 position: absolute;
                 top: 8px;
                 bottom: 8px;
                 left: calc(-16rem - 2px);
                 width: 2px;
                 background: var(--orange-3);
             }

            &:after{ content: ''; display: block; clear:both; }
        }
    }
</style>
<div class="List" style={'width:'+width}>
    if( typeof height !== 'undefined' )
    {
        <Scroll height={height} overflowLeft="calc(16rem + 2px)">
            for( item of items )
            {
            <div class="ListItem" onclick={"[...this.parentNode.querySelectorAll('.ListItem.active')].forEach(i => i.classList.remove('active'));this.classList.toggle('active')"+(typeof onclick != "undefined" ? ";("+onclick+")("+JSON.stringify(item)+")" : '' )}>
                <{template} item={item}/>
            </div>
            }
        </Scroll>
    }
    else
    {
        for( i, item of items )
        {
            <div class={i==1 ? 'ListItem active' : 'ListItem'} onclick={"[...this.parentNode.querySelectorAll('.ListItem.active')].forEach(i => i.classList.remove('active'));this.classList.toggle('active')"+(typeof onclick != "undefined" ? ";("+onclick+")("+JSON.stringify(item)+")" : '' )}>
                <{template} item={item}/>
            </div>
        }
    }
</div>
