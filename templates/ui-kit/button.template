<style>
    @keyframes spin
    {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .button
    {
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 30ms ease-in-out;
        position: relative;
        background: var( --form-button-background, var(--form-fill-background, silver ));
        color: var( --form-button-color, var(--form-color, black ));
        border: var( --form-button-border-width, var(--form-border-width, 1px )) solid  var( --form-button-border-color, var(--form-border-color, silver ));
        border-radius: var( --form-button-border-radius, var(--form-border-radius, 4px ));
        box-sizing: border-box;
        height: var( --form-button-height-size, var(--form-height-size, 36px ));
        padding: 0 var( --form-button-font-size, var(--form-font-size, 14px ));
        font-size: var( --form-button-font-size, var(--form-font-size, 14px ));
        line-height: var( --form-button-font-size, var(--form-font-size, 14px ));
        @media ( min-width: 1024px )
        {
            &:hover
            {
                background: var( --form-button-hover-background, var(--form-hover-background, blue ));
                color: var( --form-button-hover-color, var(--form-hover-color, white ));
            }
        }
        &.focus{ animation: outer-pulse 750ms infinite; }
        &:focus{ outline: 0; }
        &:before
         {
             position: absolute;
             top: 0;
             bottom: 0;
             margin: auto;
             display: flex;
             align-items: center;
         }
         &.icon-left:before{ left: var( --form-button-font-size, var(--form-font-size, 14px )); }
         &.icon-right:before{ right: var( --form-button-font-size, var(--form-font-size, 14px )); }
         &.icon-left{ padding-left: calc( var( --form-button-font-size, var(--form-font-size, 14px )) * 2 + 4px ); .loader-box { left: var( --form-button-font-size, var(--form-font-size, 14px )); margin-left: auto; } }
         &.icon-right{ padding-right: calc( var( --form-button-font-size, var(--form-font-size, 14px )) * 2 + 4px ); .loader-box { right: var( --form-button-font-size, var(--form-font-size, 14px )); margin-right: auto; } }

        &.loader
         {
            pointer-events: none;
            &[data-icon]:before{ display: none; }
            .loader-box
            {
                border-radius: 50%;
                animation: spin 2s linear infinite;
                background: conic-gradient(from 90deg, rgba(255,255,255,0), rgba(255,255,255,0), rgba(255,255,255,0.25), rgba(255,255,255,0.50), rgba(255,255,255,0.75), rgba(255,255,255,1), rgba(255,255,255,1));
                position: absolute;
                width: var( --form-button-font-size, var(--form-font-size, 14px ));
                height: var( --form-button-font-size, var(--form-font-size, 14px ));
                &:after
                 {
                     content: '';
                     position: absolute;
                     top: 50%;
                     left: 50%;
                     transform: translate(-50%, -50%);
                     width: calc( var( --form-button-font-size, var(--form-font-size, 14px )) - 4px );
                     height: calc( var( --form-button-font-size, var(--form-font-size, 14px )) - 4px );
                     background: var( --form-button-background, var(--form-fill-background, silver ));
                     border-radius: 50%;
                 }
            }
        }
    }
</style>
<script>
    window.Button = new ( function()
    {
        this._showLoader = function( element )
        {
            element.classList.add('loader');
            let loader = document.createElement('DIV');
                loader.className = 'loader-box';

            element.innerText = element.dataset.loader;

            element.prepend( loader );
        };

        this._hideLoader = function( element )
        {
           element.classList.remove('loader');
           element.innerText = element.dataset.label;
        };
    });
</script>

let _icon = ( typeof icon != 'undefined' ? icon : null );
let _label = ( typeof label != 'undefined' ? label : null );
let _icon_position = ( typeof iconPosition != 'undefined' ? ' icon-' + iconPosition : ' icon-left' );
let _loading_text = ( typeof loaderText != 'undefined' ? loaderText : 'Loading...' );
let _disabled = ( typeof disabled != 'undefined' ? disabled : null );

<button class={"button " + ( _icon ? _icon_position : '' )} disabled={_disabled} data-label={_label} data-loader={_loading_text} data-icon={_icon} onclick={( typeof onclick != "undefined" ? "(async () => {Button._showLoader(this); await " + onclick + ";Button._hideLoader(this)})();" : '' )+"this.classList.add('focus');setTimeout( () => { this.classList.remove('focus') }, 750);"}>
        if(_label){{_label}}
</button>
