<style>
    .Form_Input
    {
        display: block;
        position: relative;
        width: 100%;
        border: 1px solid var(--gray-2);
        border-radius:2px;
        transition: all 83ms ease-in-out 34ms;
        background-color: white;
        &.active {  border-color: blue; label{ color: blue; }  }
        @media (max-width:1024px) { width: 100%; }
        label
        {
            position:absolute;
            top: 0;
            left: 0;
            width: 100%;
            font-weight: normal;
            color: var(--gray-6);
            user-select: none;
            display: flex;
            align-items: center;
        }

        input
        {
            position: absolute;
            top: 0; left: 0; height:100%; width: 100%;
            display: flex;
            cursor: pointer;
            outline: 0;
            border: 0;
            border-radius: 0;
            background: transparent;
            color: var(--gray-8);
            &:hover, &:focus { color: var(--gray-9); outline: none; }
        }


        &.small
         {
             height: 24rem;
             margin-bottom: 12rem;
             transition: opacity 50ms ease-in-out;
            input{ font-size: 10rem; line-height: 14rem; padding-left: 7rem; }
            --size: 8rem;
         }

        &.normal
         {
             height: 36rem;
             margin-bottom: 24rem;
             transition: opacity 50ms ease-in-out;
            input{ font-size: 12rem; line-height: 16rem; padding-left: 7rem; }
            --size: 10rem;
        }



        &.big
         {
             height: 48rem;
             margin-bottom: 36rem;
            label
            {
                transition: all 50ms ease-in-out;
                height: 14rem;
                font-size: 10rem;
                line-height: 14rem;
                padding-left: 7rem;
                margin-top: calc(8rem - 1px);
            }
            input
            {
                font-size: 12rem;
                padding-left: 7rem;
                line-height: 16rem;
                height: 16rem;
                margin-top: calc( 26rem - 1px);
            }
            &.empty
             {
                label{ height: 100%;  font-size: 12rem; line-height: 12rem; margin: 0;  }
             }
            --size: 12rem;
        }

        .alert-icon
        {
            position: absolute;
            right: 7rem;
            font-size: calc(var(--size) + 6rem);
            top: 0;
            bottom: 0;
            align-items: center;
            justify-content: center;
            margin: auto;
            opacity: 0;
            display: flex;
        }

        &.error
         {
             border: 1px solid var(--red-8);
             background: rgba(191, 54, 12, 0.05);
            label{ color: var(--red-8); }
            .alert-icon
            {
                opacity: 1;
                color: var(--red-8);
            }
        }

        &.success
         {
             border: 1px solid var(--green-8);
             background: rgba(105, 240, 174, 0.05);
            label{ color: var(--green-8); }
            .alert-icon
            {
                opacity: 1;
                color: var(--green-8);
                &:before{ content: "\e025"; }
            }
        }
    }
</style>
<script>
    window.input = new ( function()
    {
        this.Focus = function(input)
        {
            input.classList.add('active');
            input.classList.contains('empty') ? input.classList.remove('empty') : '';
            if(input.classList.contains('error')){ input.classList.remove('error') }
            if(input.classList.contains('success')){ input.classList.remove('success') }

        };

        this.Blur = function(input)
        {
            input.classList.remove('active');
            if( !input.getElementsByTagName('input')[0].value.trim() && !input.classList.contains('empty') )
            {
                input.classList.add('empty');
            }
            else if( input.getElementsByTagName('input')[0].value.trim() )
            {
                input.classList.remove('empty');
            }
        };
    });
</script>

let _size = ( typeof size != 'undefined' ? size : ' normal' );
let _selector = ( typeof selector != 'undefined' ? selector : null );
let _value = ( typeof value != 'undefined' ? value : '' );
let _onChange = ( typeof onchange != 'undefined' ? onchange : null );
let _autocomplete = ( typeof autocomplete != 'undefined' ? autocomplete : null );
let _required = ( typeof required != 'undefined' ? undefined : null );
let _width = ( typeof width != 'undefined' ? width : '' );
let _style = ( typeof style != 'undefined' ? style : '' );
let _error = ( typeof error != 'undefined' ? ' error' : '' );
let _success = ( typeof success != 'undefined' ? ' success' : '' );
let _type = ( typeof type != 'undefined' ? type : 'text' );

<div class={'Form_Input ' + ( _value.length > 0 ? ' ' : 'empty ' ) + _size + _error + _success  } style={"width:" + _width + _style } >
if( _size === 'big' )
{
    <label for={'Form_Input_label_'+label} onclick="this.nextSibling.focus()">{label}</label>
}
    <input id={'Form_Input_label_'+label} placeholder={( _size != 'big' ? label : null )} data-selector={_selector} type={_type} value={_value} onfocus="input.Focus(this.parentNode)" onblur="input.Blur(this.parentNode)" onchange={_onChange} autocomplete={_autocomplete} required={_required} />
    <i class="alert-icon" data-icon="warning"></i>
</div>
